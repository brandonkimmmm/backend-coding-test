openapi: 3.0.0
info:
  title: Backend Coding Test
  description: An API server that keeps track of rides taken. A ride's starting location, ending location, driver name, rider name, and vehicle used can be stored.
  version: 1.0.0
servers:
  - url: http://localhost:8010
paths:
  /health:
    get:
      summary: Returns the health of the server
      responses:
        '200':
          description: Returned if the server is running
          content:
            text/html:
              schema:
                type: string
                example: Healthy
  /rides/:id:
    get:
      summary: Get a specific Ride via ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 1
          required: true
          description: ID of ride to get
      responses:
        '200':
          description: Queried Ride
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
  /rides:
    get:
      summary: Get all ride data entries
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 50
          required: false
          description: The number of items to return
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          description: The page to return
      responses:
        '200':
          description: Queried Rides
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ride'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Add a new ride data entry
      requestBody:
        description: New ride information
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - start_lat
                - end_lat
                - start_long
                - end_long
                - rider_name
                - driver_name
                - driver_vehicle
              properties:
                start_lat:
                  type: integer
                  minimum: -90
                  maximum: 90
                end_lat:
                  type: integer
                  minimum: -90
                  maximum: 90
                start_long:
                  type: integer
                  minimum: -180
                  maximum: 180
                end_long:
                  type: integer
                  minimum: -180
                  maximum: 180
                rider_name:
                  type: string
                  minLength: 1
                driver_name:
                  type: string
                  minLength: 1
                driver_vehicle:
                  type: string
                  minLength: 1
              example:
                start_lat: -70,
                start_long: -100,
                end_lat: 89,
                end_long: -1,
                rider_name: brandon,
                driver_name: john,
                driver_vehicle: 400z
      responses:
        '201':
          description: Newly created ride
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    Ride:
      type: object
      properties:
        rideID:
          type: integer
        start_lat:
          type: integer
        end_lat:
          type: integer
        start_long:
          type: integer
        end_long:
          type: integer
        rider_name:
          type: string
        driver_name:
          type: string
        driver_vehicle:
          type: string
        created:
          type: string
          format: date
      example:
        rideID: 1,
        startLat: -70,
        startLong: -100,
        endLat: 89,
        endLong: -1,
        riderName: brandon,
        driverName: john,
        driverVehicle: 400z,
        created: 2021-12-04 07:53:15
  responses:
    NotFoundError:
      description: Users Not Found Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              message:
                type: string
            example:
              error_code: RIDES_NOT_FOUND_ERROR
              message: Could not find any rides
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              message:
                type: string
            example:
              error_code: VALIDATION_ERROR
              message: Driver vehicle must be a non empty string
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              message:
                type: string
            example:
              error_code: SERVER_ERROR
              message: Unknown error